{"ast":null,"code":"var _jsxFileName = \"/Users/hwanghyejin/Desktop/LAB/study/simpleDiary/src/Lifecycle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Lifecycle = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState(\"\");\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    console.log(\"Mount!\");\n  }, []);\n  useEffect(() => {\n    console.log(\"Update!\");\n  });\n  useEffect(() => {\n    console.log(`count is update : ${count}`);\n\n    if (count > 5) {\n      alert(\"count가 5를 넘었습니다 따라서 1로 초기화합니다\");\n      setCount(0);\n    }\n  }, [count]);\n  useEffect(() => {\n    console.log(`text is update : ${text}`);\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [count, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Lifecycle, \"y91sZqswozSanktpKOvyHPQPrPQ=\");\n\n_c = Lifecycle;\nexport default Lifecycle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lifecycle\");","map":{"version":3,"sources":["/Users/hwanghyejin/Desktop/LAB/study/simpleDiary/src/Lifecycle.js"],"names":["React","useEffect","useState","Lifecycle","count","setCount","text","setText","isVisible","setIsVisible","console","log","alert","padding","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GAFQ,CAAT;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBP,KAAM,EAAvC;;AACA,QAAIA,KAAK,GAAG,CAAZ,EAAe;AACbQ,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACAP,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;AACF,GANQ,EAMN,CAACD,KAAD,CANM,CAAT;AAQAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBL,IAAK,EAArC;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,4BACE;AAAA,iBACGT,KADH,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,6BACE;AAAO,QAAA,KAAK,EAAEE,IAAd;AAAoB,QAAA,QAAQ,EAAGQ,CAAD,IAAOP,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApCD;;GAAMb,S;;KAAAA,S;AAsCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Lifecycle = () => {\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState(\"\");\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    console.log(\"Mount!\");\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Update!\");\n  });\n\n  useEffect(() => {\n    console.log(`count is update : ${count}`);\n    if (count > 5) {\n      alert(\"count가 5를 넘었습니다 따라서 1로 초기화합니다\");\n      setCount(0);\n    }\n  }, [count]);\n\n  useEffect(() => {\n    console.log(`text is update : ${text}`);\n  }, [text]);\n\n  return (\n    <div style={{ padding: 20 }}>\n      <div>\n        {count}\n        <button onClick={() => setCount(count + 1)}>+</button>\n      </div>\n      <div>\n        <input value={text} onChange={(e) => setText(e.target.value)} />\n      </div>\n    </div>\n  );\n};\n\nexport default Lifecycle;\n"]},"metadata":{},"sourceType":"module"}