{"ast":null,"code":"var _jsxFileName = \"/Users/hwanghyejin/Desktop/LAB/study/simpleDiary/src/OptimizeTest.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n/* \nconst TextView = React.memo(({ text }) => {\n  useEffect(() => {\n    console.log(`Update :: Text : ${text}`);\n  });\n\n  return <div>{text}</div>;\n});\n\nconst CountView = React.memo(({ count }) => {\n  useEffect(() => {\n    console.log(`Update :: Count : ${count}`);\n  });\n  return <div>{count}</div>;\n}); */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CounterA = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    count\n  } = _ref;\n  useEffect(() => {\n    console.log(`CounterA Update - count: ${count}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = CounterA;\n\nconst CounterB = _ref2 => {\n  _s2();\n\n  let {\n    obj\n  } = _ref2;\n  useEffect(() => {\n    console.log(`CounterB Update - count: ${obj.count}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: obj.count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(CounterB, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = CounterB;\n\nconst areEqual = () => {};\n\nconst OptimizeTest = () => {\n  _s3();\n\n  /*   const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\"); */\n  const [count, setCount] = useState(1);\n  const [obj, setObj] = useState({\n    count: 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Counter A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterA, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count),\n        children: \"A button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Counter B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterB, {\n        obj: obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setObj({\n          count: obj.count\n        }),\n        children: \"B button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(OptimizeTest, \"vZo1jgdNurzSr6DCpkoVuEAZevg=\");\n\n_c4 = OptimizeTest;\nexport default OptimizeTest;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CounterA$React.memo\");\n$RefreshReg$(_c2, \"CounterA\");\n$RefreshReg$(_c3, \"CounterB\");\n$RefreshReg$(_c4, \"OptimizeTest\");","map":{"version":3,"sources":["/Users/hwanghyejin/Desktop/LAB/study/simpleDiary/src/OptimizeTest.js"],"names":["React","useState","useEffect","CounterA","memo","count","console","log","CounterB","obj","areEqual","OptimizeTest","setCount","setObj","padding"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,QAAQ,iCAAGH,KAAK,CAACI,IAAN,SAAW,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzCH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BF,KAAM,EAA9C;AACD,GAFQ,CAAT;AAIA,sBAAO;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CANgB,kCAAH,iCAAd;;MAAMF,Q;;AAQN,MAAMK,QAAQ,GAAG,SAAa;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AAC5BP,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BE,GAAG,CAACJ,KAAM,EAAlD;AACD,GAFQ,CAAT;AAIA,sBAAO;AAAA,cAAMI,GAAG,CAACJ;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAND;;IAAMG,Q;;MAAAA,Q;;AAQN,MAAME,QAAQ,GAAG,MAAM,CAAE,CAAzB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB;AACF;AAEE,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBX,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACQ,GAAD,EAAMI,MAAN,IAAgBZ,QAAQ,CAAC;AAC7BI,IAAAA,KAAK,EAAE;AADsB,GAAD,CAA9B;AAIA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,4BAYE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAET;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMO,QAAQ,CAACP,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAiBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,GAAG,EAAEI;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMI,MAAM,CAAC;AAAER,UAAAA,KAAK,EAAEI,GAAG,CAACJ;AAAb,SAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAlCD;;IAAMM,Y;;MAAAA,Y;AAoCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n/* \nconst TextView = React.memo(({ text }) => {\n  useEffect(() => {\n    console.log(`Update :: Text : ${text}`);\n  });\n\n  return <div>{text}</div>;\n});\n\nconst CountView = React.memo(({ count }) => {\n  useEffect(() => {\n    console.log(`Update :: Count : ${count}`);\n  });\n  return <div>{count}</div>;\n}); */\n\nconst CounterA = React.memo(({ count }) => {\n  useEffect(() => {\n    console.log(`CounterA Update - count: ${count}`);\n  });\n\n  return <div>{count}</div>;\n});\n\nconst CounterB = ({ obj }) => {\n  useEffect(() => {\n    console.log(`CounterB Update - count: ${obj.count}`);\n  });\n\n  return <div>{obj.count}</div>;\n};\n\nconst areEqual = () => {};\n\nconst OptimizeTest = () => {\n  /*   const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\"); */\n\n  const [count, setCount] = useState(1);\n  const [obj, setObj] = useState({\n    count: 1,\n  });\n\n  return (\n    <div style={{ padding: 50 }}>\n      {/* <div>\n        <h2>count</h2>\n        <CountView count={count} />\n        <button onClick={() => setCount(count + 1)}>+</button>\n      </div>\n      <div>\n        <h2>text</h2>\n        <TextView text={text} />\n        <input value={text} onChange={(e) => setText(e.target.value)} />\n      </div> */}\n\n      <div>\n        <h2>Counter A</h2>\n        <CounterA count={count} />\n        <button onClick={() => setCount(count)}>A button</button>\n      </div>\n      <div>\n        <h2>Counter B</h2>\n        <CounterB obj={obj} />\n        <button onClick={() => setObj({ count: obj.count })}>B button</button>\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizeTest;\n"]},"metadata":{},"sourceType":"module"}