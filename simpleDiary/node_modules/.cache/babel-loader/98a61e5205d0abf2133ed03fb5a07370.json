{"ast":null,"code":"var _jsxFileName = \"/Users/hwanghyejin/Desktop/LAB/study/simpleDiary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport Lifecycle from \"./Lifecycle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res => res.json());\n    const initData = res.slice(0, 20).map(it => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++\n      };\n    });\n    setData(initData);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = targetID => {\n    const newDiaryList = data.filter(it => it.id !== targetID);\n    setData(newDiaryList);\n    alert(`${targetID}(이)가 삭제되었습니다.`);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(data.map(it => it.id === targetId ? { ...it,\n      content: newContent\n    } : it));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Lifecycle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2o8Xchl1A9LFe9GiqWSSYkjxPVs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hwanghyejin/Desktop/LAB/study/simpleDiary/src/App.js"],"names":["useState","useRef","useEffect","DiaryEditor","DiaryList","Lifecycle","App","data","setData","dataId","getData","res","fetch","then","json","initData","slice","map","it","author","email","content","body","emotion","Math","floor","random","created_date","Date","getTime","id","current","onCreate","newItem","onRemove","targetID","newDiaryList","filter","alert","onEdit","targetId","newContent"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport Lifecycle from \"./Lifecycle\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\n      \"https://jsonplaceholder.typicode.com/comments\"\n    ).then((res) => res.json());\n\n    const initData = res.slice(0, 20).map((it) => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++,\n      };\n    });\n\n    setData(initData);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = (targetID) => {\n    const newDiaryList = data.filter((it) => it.id !== targetID);\n    setData(newDiaryList);\n    alert(`${targetID}(이)가 삭제되었습니다.`);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(\n      data.map((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Lifecycle />\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}