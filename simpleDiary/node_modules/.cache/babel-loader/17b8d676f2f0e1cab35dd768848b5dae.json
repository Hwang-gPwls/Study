{"ast":null,"code":"var _jsxFileName = \"/Users/hwanghyejin/Desktop/LAB/study/simpleDiary/src/Lifecycle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UnmountTest = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Unmount Testing Component\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n\n_c = UnmountTest;\n\nconst Lifecycle = () => {\n  _s();\n\n  //const [count, setCount] = useState(0);\n  //const [text, setText] = useState(\"\");\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggle = () => setIsVisible(!isVisible);\n  /*   useEffect(() => {\n    console.log(\"Mount!\");\n  }, []);\n   useEffect(() => {\n    console.log(\"Update!\");\n  });\n   useEffect(() => {\n    console.log(`count is update : ${count}`);\n    if (count > 5) {\n      alert(\"count가 5를 넘었습니다 따라서 1로 초기화합니다\");\n      setCount(0);\n    }\n  }, [count]);\n   useEffect(() => {\n    console.log(`text is update : ${text}`);\n  }, [text]); */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      children: \"ON/OFF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(UnmountTest, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Lifecycle, \"QjDZesRvLCmcrZLxgN677nXnVLA=\");\n\n_c2 = Lifecycle;\nexport default Lifecycle;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UnmountTest\");\n$RefreshReg$(_c2, \"Lifecycle\");","map":{"version":3,"sources":["/Users/hwanghyejin/Desktop/LAB/study/simpleDiary/src/Lifecycle.js"],"names":["React","useEffect","useState","UnmountTest","Lifecycle","isVisible","setIsVisible","toggle","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;KAAMA,W;;AAIN,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMK,MAAM,GAAG,MAAMD,YAAY,CAAC,CAACD,SAAF,CAAjC;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKE,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAED,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,SAAS,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvCD;;GAAMD,S;;MAAAA,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst UnmountTest = () => {\n  return <div>Unmount Testing Component</div>;\n};\n\nconst Lifecycle = () => {\n  //const [count, setCount] = useState(0);\n  //const [text, setText] = useState(\"\");\n  const [isVisible, setIsVisible] = useState(false);\n  const toggle = () => setIsVisible(!isVisible);\n\n  /*   useEffect(() => {\n    console.log(\"Mount!\");\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Update!\");\n  });\n\n  useEffect(() => {\n    console.log(`count is update : ${count}`);\n    if (count > 5) {\n      alert(\"count가 5를 넘었습니다 따라서 1로 초기화합니다\");\n      setCount(0);\n    }\n  }, [count]);\n\n  useEffect(() => {\n    console.log(`text is update : ${text}`);\n  }, [text]); */\n\n  return (\n    <div style={{ padding: 20 }}>\n      <button onClick={toggle}>ON/OFF</button>\n      {isVisible && <UnmountTest />}\n      {/* <div>\n        {count}\n        <button onClick={() => setCount(count + 1)}>+</button>\n      </div>\n      <div>\n        <input value={text} onChange={(e) => setText(e.target.value)} />\n      </div> */}\n    </div>\n  );\n};\n\nexport default Lifecycle;\n"]},"metadata":{},"sourceType":"module"}