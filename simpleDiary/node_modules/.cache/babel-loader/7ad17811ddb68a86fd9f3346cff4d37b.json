{"ast":null,"code":"var _jsxFileName = \"/Users/hwanghyejin/Desktop/LAB/study/simpleDiary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useRef, useEffect, useMemo, useCallback, useReducer } from \"react\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT\":\n      {\n        return action.data;\n      }\n\n    case \"CREATE\":\n    case \"REMOVE\":\n    case \"EDIT\":\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  _s();\n\n  // const [data, setData] = useState([]);\n  const [data, dispatch] = useReducer(reducer, []);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res => res.json());\n    const initData = res.slice(0, 20).map(it => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++\n      };\n    });\n    dispatch({\n      type: \"INIT\",\n      data: initData\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const onCreate = useCallback((author, content, emotion) => {\n    dispatch({\n      type: \"CREATE\",\n      data: {\n        author,\n        content,\n        emotion,\n        id: dataId.current\n      }\n    });\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData(data => [newItem, ...data]); //함수형 업데이트\n  }, []);\n  const onRemove = useCallback(targetID => {\n    setData(data => data.filter(it => it.id !== targetID));\n  }, []);\n  const onEdit = useCallback((targetId, newContent) => {\n    setData(data => data.map(it => it.id === targetId ? { ...it,\n      content: newContent\n    } : it));\n  }, []);\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter(it => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = goodCount / data.length * 100;\n    return {\n      goodCount,\n      badCount,\n      goodRatio\n    };\n  }, [data.length]);\n  const {\n    goodCount,\n    badCount,\n    goodRatio\n  } = getDiaryAnalysis;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC804\\uCCB4 \\uC77C\\uAE30 : \", data.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uC77C\\uAE30 \\uAC1C\\uC218 : \", goodCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uB098\\uC05C \\uC77C\\uAE30 \\uAC1C\\uC218 : \", badCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uC77C\\uAE30 \\uBE44\\uC728 : \", goodRatio]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"F0Fyqg4AmrFvw2PizzKMxEoq+hM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hwanghyejin/Desktop/LAB/study/simpleDiary/src/App.js"],"names":["useRef","useEffect","useMemo","useCallback","useReducer","DiaryEditor","DiaryList","reducer","state","action","type","data","App","dispatch","dataId","getData","res","fetch","then","json","initData","slice","map","it","author","email","content","body","emotion","Math","floor","random","created_date","Date","getTime","id","current","onCreate","newItem","setData","onRemove","targetID","filter","onEdit","targetId","newContent","getDiaryAnalysis","goodCount","length","badCount","goodRatio"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useRef, useEffect, useMemo, useCallback, useReducer } from \"react\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT\": {\n      return action.data;\n    }\n    case \"CREATE\":\n    case \"REMOVE\":\n    case \"EDIT\":\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  // const [data, setData] = useState([]);\n\n  const [data, dispatch] = useReducer(reducer, []);\n\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\n      \"https://jsonplaceholder.typicode.com/comments\"\n    ).then((res) => res.json());\n\n    const initData = res.slice(0, 20).map((it) => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++,\n      };\n    });\n\n    dispatch({ type: \"INIT\", data: initData });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onCreate = useCallback((author, content, emotion) => {\n    dispatch({\n      type: \"CREATE\",\n      data: {\n        author,\n        content,\n        emotion,\n        id: dataId.current,\n      },\n    });\n\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n\n    dataId.current += 1;\n    setData((data) => [newItem, ...data]); //함수형 업데이트\n  }, []);\n\n  const onRemove = useCallback((targetID) => {\n    setData((data) => data.filter((it) => it.id !== targetID));\n  }, []);\n\n  const onEdit = useCallback((targetId, newContent) => {\n    setData((data) =>\n      data.map((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  }, []);\n\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter((it) => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = (goodCount / data.length) * 100;\n\n    return { goodCount, badCount, goodRatio };\n  }, [data.length]);\n\n  const { goodCount, badCount, goodRatio } = getDiaryAnalysis;\n\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate} />\n      <div>전체 일기 : {data.length}</div>\n      <div>기분 좋은 일기 개수 : {goodCount}</div>\n      <div>기분 나쁜 일기 개수 : {badCount}</div>\n      <div>기분 좋은 일기 비율 : {goodRatio}</div>\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}