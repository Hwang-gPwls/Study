{"ast":null,"code":"var _jsxFileName = \"/Users/hwanghyejin/Desktop/LAB/study/simpleDiary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useRef } from \"react\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport Lifecycle from \"./Lifecycle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res => res.json());\n    console.log(json);\n  };\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = targetID => {\n    const newDiaryList = data.filter(it => it.id !== targetID);\n    setData(newDiaryList);\n    alert(`${targetID}(이)가 삭제되었습니다.`);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(data.map(it => it.id === targetId ? { ...it,\n      content: newContent\n    } : it));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Lifecycle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PSh4R9M9XXzghkCT8iIKMDh9kfM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hwanghyejin/Desktop/LAB/study/simpleDiary/src/App.js"],"names":["useState","useRef","DiaryEditor","DiaryList","Lifecycle","App","data","setData","dataId","getData","res","fetch","then","json","console","log","onCreate","author","content","emotion","created_date","Date","getTime","newItem","id","current","onRemove","targetID","newDiaryList","filter","it","alert","onEdit","targetId","newContent","map"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMQ,MAAM,GAAGP,MAAM,CAAC,CAAD,CAArB;;AAEA,QAAMQ,OAAO,GAAG,YAAY;AAC1B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,+CADqB,CAAL,CAEhBC,IAFgB,CAEVF,GAAD,IAASA,GAAG,CAACG,IAAJ,EAFE,CAAlB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GALD;;AAOA,QAAMG,QAAQ,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,OAAlB,KAA8B;AAC7C,UAAMC,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;AACA,UAAMC,OAAO,GAAG;AACdN,MAAAA,MADc;AAEdC,MAAAA,OAFc;AAGdC,MAAAA,OAHc;AAIdC,MAAAA,YAJc;AAKdI,MAAAA,EAAE,EAAEhB,MAAM,CAACiB;AALG,KAAhB;AAQAjB,IAAAA,MAAM,CAACiB,OAAP,IAAkB,CAAlB;AACAlB,IAAAA,OAAO,CAAC,CAACgB,OAAD,EAAU,GAAGjB,IAAb,CAAD,CAAP;AACD,GAZD;;AAcA,QAAMoB,QAAQ,GAAIC,QAAD,IAAc;AAC7B,UAAMC,YAAY,GAAGtB,IAAI,CAACuB,MAAL,CAAaC,EAAD,IAAQA,EAAE,CAACN,EAAH,KAAUG,QAA9B,CAArB;AACApB,IAAAA,OAAO,CAACqB,YAAD,CAAP;AACAG,IAAAA,KAAK,CAAE,GAAEJ,QAAS,eAAb,CAAL;AACD,GAJD;;AAMA,QAAMK,MAAM,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;AACvC3B,IAAAA,OAAO,CACLD,IAAI,CAAC6B,GAAL,CAAUL,EAAD,IACPA,EAAE,CAACN,EAAH,KAAUS,QAAV,GAAqB,EAAE,GAAGH,EAAL;AAASZ,MAAAA,OAAO,EAAEgB;AAAlB,KAArB,GAAsDJ,EADxD,CADK,CAAP;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEd;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEgB,MAAnB;AAA2B,MAAA,QAAQ,EAAEN,QAArC;AAA+C,MAAA,SAAS,EAAEpB;AAA1D;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA/CQD,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useRef } from \"react\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport Lifecycle from \"./Lifecycle\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\n      \"https://jsonplaceholder.typicode.com/comments\"\n    ).then((res) => res.json());\n    console.log(json);\n  };\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = (targetID) => {\n    const newDiaryList = data.filter((it) => it.id !== targetID);\n    setData(newDiaryList);\n    alert(`${targetID}(이)가 삭제되었습니다.`);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(\n      data.map((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Lifecycle />\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}