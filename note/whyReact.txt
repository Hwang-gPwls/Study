Why React?

-중복 코드 작성 => 산탕총 수술 문제 발생 (유지보수)
 => 재사용 되어야 하는 코드를 컴포넌트화
 => React는 컴포넌트 기반의 UI 라이브러리

 -명령형 프로그래밍은 철자를 하나하나 다 나열 해야하지만(Jquery), 선언형 프로그래밍은 목적만 명시(React)

 -Virtual Dom
 Dom(Document Object Model)
 가상의 돔에 업데이트 후 필요한 부분만 브라우저에 업데이트


 -WebPack
 다수의 자바스크립트 파일을 하나의 파일로 합쳐주는 모듈 번들 라이브러리

 -Babel
 JSX 등의 쉽고 직관적인 자바스크립트 문법을 사용할 수 있도록 해주는 라이브러리






 -State
 : 컴포넌트가 갖는, 계속 값이 바뀔 동적인 데이터 이걸 가진 컴포넌트가 직접 관리하게 된다.
